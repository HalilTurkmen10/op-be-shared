// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.14.0
// source: logging.proto

package logging

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LogType int32

const (
	LogType_LogTypeNONE    LogType = 0
	LogType_LogTypeINFO    LogType = 1
	LogType_LogTypeWARNING LogType = 2
	LogType_LogTypeERROR   LogType = 3
	LogType_LogTypeDEBUG   LogType = 4
)

// Enum value maps for LogType.
var (
	LogType_name = map[int32]string{
		0: "LogTypeNONE",
		1: "LogTypeINFO",
		2: "LogTypeWARNING",
		3: "LogTypeERROR",
		4: "LogTypeDEBUG",
	}
	LogType_value = map[string]int32{
		"LogTypeNONE":    0,
		"LogTypeINFO":    1,
		"LogTypeWARNING": 2,
		"LogTypeERROR":   3,
		"LogTypeDEBUG":   4,
	}
)

func (x LogType) Enum() *LogType {
	p := new(LogType)
	*p = x
	return p
}

func (x LogType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LogType) Descriptor() protoreflect.EnumDescriptor {
	return file_logging_proto_enumTypes[0].Descriptor()
}

func (LogType) Type() protoreflect.EnumType {
	return &file_logging_proto_enumTypes[0]
}

func (x LogType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LogType.Descriptor instead.
func (LogType) EnumDescriptor() ([]byte, []int) {
	return file_logging_proto_rawDescGZIP(), []int{0}
}

type LogSortField int32

const (
	LogSortField_LogSortFieldNONE        LogSortField = 0
	LogSortField_LogSortFieldId          LogSortField = 1
	LogSortField_LogSortFieldServiceName LogSortField = 2
	LogSortField_LogSortFieldEventDate   LogSortField = 3
	LogSortField_LogSortFieldCreatedAt   LogSortField = 4
	LogSortField_LogSortFieldUpdatedAt   LogSortField = 5
)

// Enum value maps for LogSortField.
var (
	LogSortField_name = map[int32]string{
		0: "LogSortFieldNONE",
		1: "LogSortFieldId",
		2: "LogSortFieldServiceName",
		3: "LogSortFieldEventDate",
		4: "LogSortFieldCreatedAt",
		5: "LogSortFieldUpdatedAt",
	}
	LogSortField_value = map[string]int32{
		"LogSortFieldNONE":        0,
		"LogSortFieldId":          1,
		"LogSortFieldServiceName": 2,
		"LogSortFieldEventDate":   3,
		"LogSortFieldCreatedAt":   4,
		"LogSortFieldUpdatedAt":   5,
	}
)

func (x LogSortField) Enum() *LogSortField {
	p := new(LogSortField)
	*p = x
	return p
}

func (x LogSortField) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LogSortField) Descriptor() protoreflect.EnumDescriptor {
	return file_logging_proto_enumTypes[1].Descriptor()
}

func (LogSortField) Type() protoreflect.EnumType {
	return &file_logging_proto_enumTypes[1]
}

func (x LogSortField) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LogSortField.Descriptor instead.
func (LogSortField) EnumDescriptor() ([]byte, []int) {
	return file_logging_proto_rawDescGZIP(), []int{1}
}

type LogDatas struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LogDatas  []*LogData `protobuf:"bytes,1,rep,name=logDatas,proto3" json:"logDatas,omitempty"`
	TotalRows int64      `protobuf:"varint,2,opt,name=totalRows,proto3" json:"totalRows,omitempty"`
}

func (x *LogDatas) Reset() {
	*x = LogDatas{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logging_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogDatas) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogDatas) ProtoMessage() {}

func (x *LogDatas) ProtoReflect() protoreflect.Message {
	mi := &file_logging_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogDatas.ProtoReflect.Descriptor instead.
func (*LogDatas) Descriptor() ([]byte, []int) {
	return file_logging_proto_rawDescGZIP(), []int{0}
}

func (x *LogDatas) GetLogDatas() []*LogData {
	if x != nil {
		return x.LogDatas
	}
	return nil
}

func (x *LogDatas) GetTotalRows() int64 {
	if x != nil {
		return x.TotalRows
	}
	return 0
}

type LogData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Header    *LogHeader             `protobuf:"bytes,2,opt,name=header,proto3" json:"header,omitempty"`
	Body      *LogBody               `protobuf:"bytes,3,opt,name=body,proto3" json:"body,omitempty"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,80,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,81,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *LogData) Reset() {
	*x = LogData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logging_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogData) ProtoMessage() {}

func (x *LogData) ProtoReflect() protoreflect.Message {
	mi := &file_logging_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogData.ProtoReflect.Descriptor instead.
func (*LogData) Descriptor() ([]byte, []int) {
	return file_logging_proto_rawDescGZIP(), []int{1}
}

func (x *LogData) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *LogData) GetHeader() *LogHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *LogData) GetBody() *LogBody {
	if x != nil {
		return x.Body
	}
	return nil
}

func (x *LogData) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *LogData) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type LogHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventDate   *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=eventDate,proto3" json:"eventDate,omitempty"`
	LogType     LogType                `protobuf:"varint,2,opt,name=logType,proto3,enum=LogType" json:"logType,omitempty"`
	ServiceName string                 `protobuf:"bytes,3,opt,name=serviceName,proto3" json:"serviceName,omitempty"`
	Path        string                 `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	UserId      string                 `protobuf:"bytes,5,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *LogHeader) Reset() {
	*x = LogHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logging_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogHeader) ProtoMessage() {}

func (x *LogHeader) ProtoReflect() protoreflect.Message {
	mi := &file_logging_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogHeader.ProtoReflect.Descriptor instead.
func (*LogHeader) Descriptor() ([]byte, []int) {
	return file_logging_proto_rawDescGZIP(), []int{2}
}

func (x *LogHeader) GetEventDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EventDate
	}
	return nil
}

func (x *LogHeader) GetLogType() LogType {
	if x != nil {
		return x.LogType
	}
	return LogType_LogTypeNONE
}

func (x *LogHeader) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

func (x *LogHeader) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *LogHeader) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type LogBody struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *LogBody) Reset() {
	*x = LogBody{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logging_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogBody) ProtoMessage() {}

func (x *LogBody) ProtoReflect() protoreflect.Message {
	mi := &file_logging_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogBody.ProtoReflect.Descriptor instead.
func (*LogBody) Descriptor() ([]byte, []int) {
	return file_logging_proto_rawDescGZIP(), []int{3}
}

func (x *LogBody) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type LoggingResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LoggingResult) Reset() {
	*x = LoggingResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logging_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoggingResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoggingResult) ProtoMessage() {}

func (x *LoggingResult) ProtoReflect() protoreflect.Message {
	mi := &file_logging_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoggingResult.ProtoReflect.Descriptor instead.
func (*LoggingResult) Descriptor() ([]byte, []int) {
	return file_logging_proto_rawDescGZIP(), []int{4}
}

type LogDataFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            *string                `protobuf:"bytes,1,opt,name=id,proto3,oneof" json:"id,omitempty"`
	EventDateFrom *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=eventDateFrom,proto3,oneof" json:"eventDateFrom,omitempty"`
	EventDateTo   *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=eventDateTo,proto3,oneof" json:"eventDateTo,omitempty"`
	LogType       *LogType               `protobuf:"varint,4,opt,name=logType,proto3,enum=LogType,oneof" json:"logType,omitempty"`
	ServiceName   *string                `protobuf:"bytes,5,opt,name=serviceName,proto3,oneof" json:"serviceName,omitempty"`
	Path          *string                `protobuf:"bytes,6,opt,name=path,proto3,oneof" json:"path,omitempty"`
	UserId        *string                `protobuf:"bytes,7,opt,name=userId,proto3,oneof" json:"userId,omitempty"`
	CreatedAtFrom *timestamppb.Timestamp `protobuf:"bytes,80,opt,name=createdAtFrom,proto3,oneof" json:"createdAtFrom,omitempty"`
	CreatedAtTo   *timestamppb.Timestamp `protobuf:"bytes,81,opt,name=createdAtTo,proto3,oneof" json:"createdAtTo,omitempty"`
	UpdatedAtFrom *timestamppb.Timestamp `protobuf:"bytes,82,opt,name=updatedAtFrom,proto3,oneof" json:"updatedAtFrom,omitempty"`
	UpdatedAtTo   *timestamppb.Timestamp `protobuf:"bytes,84,opt,name=updatedAtTo,proto3,oneof" json:"updatedAtTo,omitempty"`
	SearchText    *string                `protobuf:"bytes,95,opt,name=searchText,proto3,oneof" json:"searchText,omitempty"`
	SortType      *string                `protobuf:"bytes,96,opt,name=sortType,proto3,oneof" json:"sortType,omitempty"`
	SortField     *LogSortField          `protobuf:"varint,97,opt,name=sortField,proto3,enum=LogSortField,oneof" json:"sortField,omitempty"`
	Limit         *int32                 `protobuf:"varint,98,opt,name=limit,proto3,oneof" json:"limit,omitempty"`
	Offset        *int32                 `protobuf:"varint,99,opt,name=offset,proto3,oneof" json:"offset,omitempty"`
}

func (x *LogDataFilter) Reset() {
	*x = LogDataFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logging_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogDataFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogDataFilter) ProtoMessage() {}

func (x *LogDataFilter) ProtoReflect() protoreflect.Message {
	mi := &file_logging_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogDataFilter.ProtoReflect.Descriptor instead.
func (*LogDataFilter) Descriptor() ([]byte, []int) {
	return file_logging_proto_rawDescGZIP(), []int{5}
}

func (x *LogDataFilter) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *LogDataFilter) GetEventDateFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.EventDateFrom
	}
	return nil
}

func (x *LogDataFilter) GetEventDateTo() *timestamppb.Timestamp {
	if x != nil {
		return x.EventDateTo
	}
	return nil
}

func (x *LogDataFilter) GetLogType() LogType {
	if x != nil && x.LogType != nil {
		return *x.LogType
	}
	return LogType_LogTypeNONE
}

func (x *LogDataFilter) GetServiceName() string {
	if x != nil && x.ServiceName != nil {
		return *x.ServiceName
	}
	return ""
}

func (x *LogDataFilter) GetPath() string {
	if x != nil && x.Path != nil {
		return *x.Path
	}
	return ""
}

func (x *LogDataFilter) GetUserId() string {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return ""
}

func (x *LogDataFilter) GetCreatedAtFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAtFrom
	}
	return nil
}

func (x *LogDataFilter) GetCreatedAtTo() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAtTo
	}
	return nil
}

func (x *LogDataFilter) GetUpdatedAtFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAtFrom
	}
	return nil
}

func (x *LogDataFilter) GetUpdatedAtTo() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAtTo
	}
	return nil
}

func (x *LogDataFilter) GetSearchText() string {
	if x != nil && x.SearchText != nil {
		return *x.SearchText
	}
	return ""
}

func (x *LogDataFilter) GetSortType() string {
	if x != nil && x.SortType != nil {
		return *x.SortType
	}
	return ""
}

func (x *LogDataFilter) GetSortField() LogSortField {
	if x != nil && x.SortField != nil {
		return *x.SortField
	}
	return LogSortField_LogSortFieldNONE
}

func (x *LogDataFilter) GetLimit() int32 {
	if x != nil && x.Limit != nil {
		return *x.Limit
	}
	return 0
}

func (x *LogDataFilter) GetOffset() int32 {
	if x != nil && x.Offset != nil {
		return *x.Offset
	}
	return 0
}

var File_logging_proto protoreflect.FileDescriptor

var file_logging_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x4e, 0x0a, 0x08, 0x4c, 0x6f, 0x67, 0x44, 0x61, 0x74, 0x61, 0x73, 0x12, 0x24, 0x0a, 0x08,
	0x6c, 0x6f, 0x67, 0x44, 0x61, 0x74, 0x61, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08,
	0x2e, 0x4c, 0x6f, 0x67, 0x44, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6c, 0x6f, 0x67, 0x44, 0x61, 0x74,
	0x61, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x6f, 0x77, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x6f, 0x77, 0x73,
	0x22, 0xcf, 0x01, 0x0a, 0x07, 0x4c, 0x6f, 0x67, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x06,
	0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x4c,
	0x6f, 0x67, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x12, 0x1c, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08,
	0x2e, 0x4c, 0x6f, 0x67, 0x42, 0x6f, 0x64, 0x79, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x12, 0x38,
	0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x50, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x51, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x22, 0xb7, 0x01, 0x0a, 0x09, 0x4c, 0x6f, 0x67, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x12, 0x38, 0x0a, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x22, 0x0a, 0x07, 0x6c, 0x6f,
	0x67, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x08, 0x2e, 0x4c, 0x6f,
	0x67, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x6c, 0x6f, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x70, 0x61, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x23, 0x0a, 0x07,
	0x4c, 0x6f, 0x67, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x22, 0x0f, 0x0a, 0x0d, 0x4c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x22, 0xd4, 0x07, 0x0a, 0x0d, 0x4c, 0x6f, 0x67, 0x44, 0x61, 0x74, 0x61, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x12, 0x13, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x02, 0x69, 0x64, 0x88, 0x01, 0x01, 0x12, 0x45, 0x0a, 0x0d, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x44, 0x61, 0x74, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x01, 0x52, 0x0d,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x88, 0x01, 0x01,
	0x12, 0x41, 0x0a, 0x0b, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x48, 0x02, 0x52, 0x0b, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x65, 0x54, 0x6f,
	0x88, 0x01, 0x01, 0x12, 0x27, 0x0a, 0x07, 0x6c, 0x6f, 0x67, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x08, 0x2e, 0x4c, 0x6f, 0x67, 0x54, 0x79, 0x70, 0x65, 0x48, 0x03,
	0x52, 0x07, 0x6c, 0x6f, 0x67, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a, 0x0b,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x04, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x05, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x45, 0x0a, 0x0d, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x46, 0x72, 0x6f, 0x6d, 0x18, 0x50, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x07, 0x52, 0x0d,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x46, 0x72, 0x6f, 0x6d, 0x88, 0x01, 0x01,
	0x12, 0x41, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x54, 0x6f, 0x18,
	0x51, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x48, 0x08, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x54, 0x6f,
	0x88, 0x01, 0x01, 0x12, 0x45, 0x0a, 0x0d, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x46, 0x72, 0x6f, 0x6d, 0x18, 0x52, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x09, 0x52, 0x0d, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x46, 0x72, 0x6f, 0x6d, 0x88, 0x01, 0x01, 0x12, 0x41, 0x0a, 0x0b, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x54, 0x6f, 0x18, 0x54, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x0a, 0x52, 0x0b, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x54, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a,
	0x0a, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x65, 0x78, 0x74, 0x18, 0x5f, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x0b, 0x52, 0x0a, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x65, 0x78, 0x74, 0x88,
	0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x73, 0x6f, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x60,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x0c, 0x52, 0x08, 0x73, 0x6f, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x30, 0x0a, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x18, 0x61, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x4c, 0x6f, 0x67, 0x53, 0x6f, 0x72, 0x74,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x48, 0x0d, 0x52, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x62,
	0x20, 0x01, 0x28, 0x05, 0x48, 0x0e, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x88, 0x01, 0x01,
	0x12, 0x1b, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x63, 0x20, 0x01, 0x28, 0x05,
	0x48, 0x0f, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x88, 0x01, 0x01, 0x42, 0x05, 0x0a,
	0x03, 0x5f, 0x69, 0x64, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x61,
	0x74, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x44, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x6c, 0x6f, 0x67, 0x54, 0x79,
	0x70, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x42, 0x09, 0x0a, 0x07, 0x5f,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x46, 0x72, 0x6f, 0x6d, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x54, 0x6f, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x46, 0x72, 0x6f, 0x6d, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x54, 0x6f, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x73,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x65, 0x78, 0x74, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x73, 0x6f,
	0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x73, 0x6f, 0x72, 0x74, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x42, 0x09,
	0x0a, 0x07, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x2a, 0x63, 0x0a, 0x07, 0x4c, 0x6f, 0x67,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x4c, 0x6f, 0x67, 0x54, 0x79, 0x70, 0x65, 0x4e,
	0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x4c, 0x6f, 0x67, 0x54, 0x79, 0x70, 0x65,
	0x49, 0x4e, 0x46, 0x4f, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x4c, 0x6f, 0x67, 0x54, 0x79, 0x70,
	0x65, 0x57, 0x41, 0x52, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c, 0x4c, 0x6f,
	0x67, 0x54, 0x79, 0x70, 0x65, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x03, 0x12, 0x10, 0x0a, 0x0c,
	0x4c, 0x6f, 0x67, 0x54, 0x79, 0x70, 0x65, 0x44, 0x45, 0x42, 0x55, 0x47, 0x10, 0x04, 0x2a, 0xa6,
	0x01, 0x0a, 0x0c, 0x4c, 0x6f, 0x67, 0x53, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12,
	0x14, 0x0a, 0x10, 0x4c, 0x6f, 0x67, 0x53, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4e,
	0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x4c, 0x6f, 0x67, 0x53, 0x6f, 0x72, 0x74,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x49, 0x64, 0x10, 0x01, 0x12, 0x1b, 0x0a, 0x17, 0x4c, 0x6f, 0x67,
	0x53, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x10, 0x02, 0x12, 0x19, 0x0a, 0x15, 0x4c, 0x6f, 0x67, 0x53, 0x6f, 0x72,
	0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x65, 0x10,
	0x03, 0x12, 0x19, 0x0a, 0x15, 0x4c, 0x6f, 0x67, 0x53, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x10, 0x04, 0x12, 0x19, 0x0a, 0x15,
	0x4c, 0x6f, 0x67, 0x53, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x10, 0x05, 0x32, 0x5f, 0x0a, 0x0a, 0x4c, 0x6f, 0x67, 0x67, 0x69,
	0x6e, 0x67, 0x53, 0x76, 0x63, 0x12, 0x2e, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x73,
	0x42, 0x79, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x0e, 0x2e, 0x4c, 0x6f, 0x67, 0x44, 0x61,
	0x74, 0x61, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x1a, 0x09, 0x2e, 0x4c, 0x6f, 0x67, 0x44, 0x61,
	0x74, 0x61, 0x73, 0x22, 0x00, 0x12, 0x21, 0x0a, 0x03, 0x4c, 0x6f, 0x67, 0x12, 0x08, 0x2e, 0x4c,
	0x6f, 0x67, 0x44, 0x61, 0x74, 0x61, 0x1a, 0x0e, 0x2e, 0x4c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x42, 0x3b, 0x5a, 0x39, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x63, 0x74, 0x6f, 0x70, 0x6f, 0x73, 0x70, 0x72,
	0x69, 0x6d, 0x65, 0x2f, 0x6f, 0x70, 0x2d, 0x62, 0x65, 0x2d, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64,
	0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x62, 0x2f, 0x6c, 0x6f,
	0x67, 0x67, 0x69, 0x6e, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_logging_proto_rawDescOnce sync.Once
	file_logging_proto_rawDescData = file_logging_proto_rawDesc
)

func file_logging_proto_rawDescGZIP() []byte {
	file_logging_proto_rawDescOnce.Do(func() {
		file_logging_proto_rawDescData = protoimpl.X.CompressGZIP(file_logging_proto_rawDescData)
	})
	return file_logging_proto_rawDescData
}

var file_logging_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_logging_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_logging_proto_goTypes = []interface{}{
	(LogType)(0),                  // 0: LogType
	(LogSortField)(0),             // 1: LogSortField
	(*LogDatas)(nil),              // 2: LogDatas
	(*LogData)(nil),               // 3: LogData
	(*LogHeader)(nil),             // 4: LogHeader
	(*LogBody)(nil),               // 5: LogBody
	(*LoggingResult)(nil),         // 6: LoggingResult
	(*LogDataFilter)(nil),         // 7: LogDataFilter
	(*timestamppb.Timestamp)(nil), // 8: google.protobuf.Timestamp
}
var file_logging_proto_depIdxs = []int32{
	3,  // 0: LogDatas.logDatas:type_name -> LogData
	4,  // 1: LogData.header:type_name -> LogHeader
	5,  // 2: LogData.body:type_name -> LogBody
	8,  // 3: LogData.createdAt:type_name -> google.protobuf.Timestamp
	8,  // 4: LogData.updatedAt:type_name -> google.protobuf.Timestamp
	8,  // 5: LogHeader.eventDate:type_name -> google.protobuf.Timestamp
	0,  // 6: LogHeader.logType:type_name -> LogType
	8,  // 7: LogDataFilter.eventDateFrom:type_name -> google.protobuf.Timestamp
	8,  // 8: LogDataFilter.eventDateTo:type_name -> google.protobuf.Timestamp
	0,  // 9: LogDataFilter.logType:type_name -> LogType
	8,  // 10: LogDataFilter.createdAtFrom:type_name -> google.protobuf.Timestamp
	8,  // 11: LogDataFilter.createdAtTo:type_name -> google.protobuf.Timestamp
	8,  // 12: LogDataFilter.updatedAtFrom:type_name -> google.protobuf.Timestamp
	8,  // 13: LogDataFilter.updatedAtTo:type_name -> google.protobuf.Timestamp
	1,  // 14: LogDataFilter.sortField:type_name -> LogSortField
	7,  // 15: LoggingSvc.GetLogsByFilter:input_type -> LogDataFilter
	3,  // 16: LoggingSvc.Log:input_type -> LogData
	2,  // 17: LoggingSvc.GetLogsByFilter:output_type -> LogDatas
	6,  // 18: LoggingSvc.Log:output_type -> LoggingResult
	17, // [17:19] is the sub-list for method output_type
	15, // [15:17] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_logging_proto_init() }
func file_logging_proto_init() {
	if File_logging_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_logging_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogDatas); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logging_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logging_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logging_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogBody); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logging_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoggingResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logging_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogDataFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_logging_proto_msgTypes[5].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_logging_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_logging_proto_goTypes,
		DependencyIndexes: file_logging_proto_depIdxs,
		EnumInfos:         file_logging_proto_enumTypes,
		MessageInfos:      file_logging_proto_msgTypes,
	}.Build()
	File_logging_proto = out.File
	file_logging_proto_rawDesc = nil
	file_logging_proto_goTypes = nil
	file_logging_proto_depIdxs = nil
}
